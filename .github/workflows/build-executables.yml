name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Build executable
        run: |
          pyinstaller --onefile teambuilder/main.py --name teambuilder
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: teambuilder-windows
          path: dist/teambuilder.exe

  build-macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python for ARM build
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PyInstaller (ARM build)
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build native ARM executable
        run: |
          pyinstaller --onefile teambuilder/main.py --name teambuilder-arm64

      - name: Upload ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: teambuilder-macos-arm64
          path: dist/teambuilder-arm64

      - name: Install Rosetta and set up Python for x86_64 build
        run: |
          softwareupdate --install-rosetta --agree-to-license
          arch -x86_64 /usr/bin/python3 -m pip install --upgrade pip
          arch -x86_64 pip3 install pyinstaller

      - name: Build x86_64 (Intel) executable
        run: |
          arch -x86_64 pyinstaller --onefile teambuilder/main.py --name teambuilder-x86_64

      - name: Upload x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: teambuilder-macos-x86_64
          path: dist/teambuilder-x86_64
